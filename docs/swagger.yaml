swagger: '2.0'
info:
  description: 'API to create sessions, configurations and running tasks of your VNFs'
  version: v1
  termsOfService: 'http://swagger.io/terms/'
  title: VNF Manager
  contact:
    email: sofiane.imadali@orange.com
  license:
    name: MIT
    url: 'https://github.com/sofianinho/training/blob/master/LICENSE'
basePath: /api/v1
schemes:
  - http
paths:
  /session/:
    post:
      tags:
        - Session
      summary: Create a new session on your VNF manager
      description: Session creation in your VNF manager
      operationId: postSession
      produces:
        - application/json
      consumes:
        - application/json
      responses:
        '201':
          description: Successfully created a new session
          schema:
            $ref: '#/definitions/typesSession'
  '/session/{session_id}':
    delete:
      tags:
        - Session
      summary: Delete a session
      description: Delete a session with configuration and instances
      operationId: deleteSessionSessionid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id to delete
          required: true
          type: string
      responses:
        '200':
          description: Successfully deleted a session
          schema:
            $ref: '#/definitions/handlersapiReply'
    get:
      tags:
        - Session
      summary: Returns a session on your VNF manager
      description: Session search in your VNF manager
      operationId: getSessionSessionid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id to search
          required: true
          type: string
      responses:
        '200':
          description: Successfully found a session
          schema:
            $ref: '#/definitions/typesSession'
  '/session/{session_id}/config':
    post:
      tags:
        - Configuration
      summary: Create a new VNF configuration in your session
      description: Configuration creation in your session
      operationId: postSessionSessionidConfig
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id for this config
          required: true
          type: string
        - in: body
          name: body
          description: Configuration needs to be created in the session
          required: true
          schema:
            $ref: '#/definitions/handlersconfJson'
      responses:
        '201':
          description: Successfully created a configuration
          schema:
            $ref: '#/definitions/typesConfig'
  '/session/{session_id}/config/{config_id}':
    delete:
      tags:
        - Configuration
      summary: Delete a VNF configuration in your session
      description: Configuration delete in your session
      operationId: deleteSessionSessionidConfigConfigid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id for this config
          required: true
          type: string
        - in: path
          name: config_id
          description: config id to delete
          required: true
          type: string
      responses:
        '201':
          description: Successfully deleted a configuration
          schema:
            $ref: '#/definitions/handlersapiReply'
    get:
      tags:
        - Configuration
      summary: Returns a configuration from your VNF manager session
      description: Config search in your VNF manager session
      operationId: getSessionSessionidConfigConfigid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id to search
          required: true
          type: string
        - in: path
          name: config_id
          description: config id to search
          required: true
          type: string
      responses:
        '200':
          description: Successfully found a config
          schema:
            $ref: '#/definitions/typesConfig'
  '/session/{session_id}/configs':
    get:
      tags:
        - Configuration
      summary: Returns all configs in your VNF manager session
      description: Configs listing in your VNF manager session
      operationId: getSessionSessionidConfigs
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id to search
          required: true
          type: string
      responses:
        '200':
          description: Successfully returned  configs
          schema:
            type: array
            items:
              $ref: '#/definitions/typesConfig'
  '/session/{session_id}/instance':
    post:
      tags:
        - Instance
      summary: Create a new VNF instance in your session
      description: Instance creation in your session
      operationId: postSessionSessionidInstance
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id for this instance
          required: true
          type: string
        - in: query
          name: vnf_name
          description: the VNF name for this session
          required: false
          type: string
        - in: body
          name: body
          description: Instance to be created in the session
          required: true
          schema:
            $ref: '#/definitions/handlersinstanceJson'
      responses:
        '201':
          description: Successfully created an instance
          schema:
            $ref: '#/definitions/typesInstance'
  '/session/{session_id}/instance/{instance_id}':
    delete:
      tags:
        - Instance
      summary: Delete a VNF instance in your session
      description: Instance delete in your session
      operationId: deleteSessionSessionidInstanceInstanceid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id for this config
          required: true
          type: string
        - in: path
          name: instance_id
          description: instance id to delete
          required: true
          type: string
      responses:
        '200':
          description: Successfully deleted an instance
          schema:
            $ref: '#/definitions/handlersapiReply'
    get:
      tags:
        - Instance
      summary: Returns an instance from your VNF manager session
      description: Instance search in your VNF manager session
      operationId: getSessionSessionidInstanceInstanceid
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id to search
          required: true
          type: string
        - in: path
          name: instance_id
          description: instance id to search
          required: true
          type: string
      responses:
        '200':
          description: Successfully found an instance
          schema:
            $ref: '#/definitions/typesInstance'
  '/session/{session_id}/instances':
    get:
      tags:
        - Instance
      summary: Returns all instances in your VNF manager session
      description: Instances listing in your VNF manager session
      operationId: getSessionSessionidInstances
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: session_id
          description: session id to search
          required: true
          type: string
      responses:
        '200':
          description: Successfully returned instances
          schema:
            type: array
            items:
              $ref: '#/definitions/typesInstance'
  /sessions/:
    get:
      tags:
        - Session
      summary: Returns all sessions on your VNF manager
      description: Sessions listing in your VNF manager
      operationId: getSessions
      produces:
        - application/json
      consumes:
        - application/json
      responses:
        '200':
          description: Successfully returned  sessions
          schema:
            type: array
            items:
              $ref: '#/definitions/typesSession'
  /status:
    get:
      tags:
        - Status
      summary: Returns a status for the scheduler
      description: Scheduler status in your VNF manager
      operationId: getStatus
      produces:
        - application/json
      consumes:
        - application/json
      responses:
        '200':
          description: Successfully returned a system status
          schema:
            $ref: '#/definitions/typesStatus'
definitions:
  handlersapiReply:
    type: object
    properties:
      hostname:
        type: string
      session_id:
        type: string
      status:
        type: string
  handlersconfJson:
    type: object
    properties:
      Params:
        $ref: '#/definitions/typesVNFParams'
      alias:
        type: string
      tags:
        type: array
        items:
          type: string
      template_version:
        type: string
  handlersinstanceJson:
    type: object
    properties:
      Tags:
        type: array
        items:
          type: string
      alias:
        type: string
      config_id:
        type: string
  timeTime:
    type: object
  typesConfig:
    type: object
    properties:
      alias:
        type: string
      created_at:
        $ref: '#/definitions/timeTime'
      id:
        type: string
      params:
        $ref: '#/definitions/typesVNFParams'
      session_id:
        type: string
      tags:
        type: array
        items:
          type: string
      template_version:
        type: string
  typesCpu:
    type: object
    properties:
      idle_per:
        type: number
        format: double
      sys_per:
        type: number
        format: double
      user_per:
        type: number
        format: double
  typesInstance:
    type: object
    properties:
      Artefact:
        type: string
      alias:
        type: string
      configuration:
        $ref: '#/definitions/typesConfig'
      created_at:
        $ref: '#/definitions/timeTime'
      id:
        type: string
      session_id:
        type: string
      tags:
        type: array
        items:
          type: string
  typesLoad:
    type: object
    properties:
      load_avg_1:
        type: number
        format: double
      load_avg_15:
        type: number
        format: double
      load_avg_5:
        type: number
        format: double
  typesMMEConf:
    type: object
    properties:
      ipv4:
        type: string
      ipv6:
        type: string
      preference:
        type: string
  typesMem:
    type: object
    properties:
      free:
        type: string
      total:
        type: string
      user:
        type: string
  typesNet:
    type: object
    properties:
      bytes_recv:
        type: string
      bytes_sent:
        type: string
      packets_recv:
        type: string
      packets_sent:
        type: string
  typesOAIEnb:
    type: object
    properties:
      cell_type:
        type: string
      enb_dl:
        type: integer
        format: int32
      enb_id:
        type: string
      enb_mcc:
        type: integer
        format: int32
      enb_mnc:
        type: integer
        format: int32
      enb_name:
        type: string
      enb_tra:
        type: integer
        format: int32
      enb_ul:
        type: integer
        format: int32
      mme:
        $ref: '#/definitions/typesMMEConf'
      nb_rx:
        type: integer
        format: int32
      nb_tx:
        type: integer
        format: int32
  typesSession:
    type: object
    properties:
      configurations: {}
      created_at:
        $ref: '#/definitions/timeTime'
      id:
        type: string
      instances: {}
  typesStatus:
    type: object
    properties:
      cpu_stats:
        $ref: '#/definitions/typesCpu'
      load_avg:
        $ref: '#/definitions/typesLoad'
      memory:
        $ref: '#/definitions/typesMem'
      network:
        $ref: '#/definitions/typesNet'
  typesVNFParams:
    type: object
    properties:
      enb:
        $ref: '#/definitions/typesOAIEnb'
tags:
  - name: Session
    description: A set of VNFs and configs
    externalDocs:
      description: ''
      url: ''
  - name: Configuration
    description: Operations for configs in a session
    externalDocs:
      description: ''
      url: ''
  - name: Instance
    description: Operations for instances of VNFs in a session
    externalDocs:
      description: ''
      url: ''
  - name: Status
    description: An overview of the system status
    externalDocs:
      description: ''
      url: ''
host: 'localhost:8000'

